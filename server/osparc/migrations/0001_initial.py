# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-04 21:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Total',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dcrating', models.FloatField(blank=True, null=True)),
                ('storageoriginalcapacity', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'osparc_total',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountID', models.CharField(max_length=250)),
                ('role', models.CharField(blank=True, max_length=16, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('companyName', models.CharField(blank=True, max_length=50, null=True)),
                ('companyAddress', models.CharField(blank=True, max_length=50, null=True)),
                ('companyCityState', models.CharField(blank=True, max_length=50, null=True)),
                ('companyPostalCode', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(max_length=250)),
                ('versionCreationTime', models.DateTimeField(auto_now_add=True)),
                ('recordStatus', models.IntegerField(default=1)),
                ('versionID', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('plants', models.IntegerField(blank=True, null=True)),
                ('sampleinterval', models.CharField(default=b'monthly', max_length=64)),
                ('firstday', models.DateField(blank=True, null=True)),
                ('lastday', models.DateField(blank=True, null=True)),
                ('mean', models.FloatField(blank=True, null=True)),
                ('median', models.FloatField(blank=True, null=True)),
                ('minimum', models.FloatField(blank=True, null=True)),
                ('maximum', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('activationdate', models.DateField()),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=6, null=True)),
                ('dcrating', models.FloatField(blank=True, null=True)),
                ('storageoriginalcapacity', models.FloatField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
                ('county', models.CharField(blank=True, max_length=32, null=True)),
                ('city', models.CharField(blank=True, max_length=32, null=True)),
                ('latitude', models.CharField(default=b'none', max_length=16)),
                ('longitude', models.CharField(default=b'none', max_length=16)),
                ('timezone', models.CharField(default=b'none', max_length=64)),
                ('weathersource', models.CharField(blank=True, max_length=32, null=True)),
                ('derate', models.FloatField(blank=True, null=True)),
                ('arraytype', models.CharField(blank=True, max_length=32, null=True)),
                ('tilt', models.IntegerField(blank=True, null=True)),
                ('azimuth', models.IntegerField(blank=True, null=True)),
                ('storagecurrentcapacity', models.FloatField(blank=True, null=True)),
                ('storagestateofcharge', models.FloatField(blank=True, null=True)),
                ('accountid', models.CharField(max_length=250)),
                ('recordstatus', models.IntegerField(default=1)),
                ('versioncreationtime', models.DateTimeField(auto_now_add=True)),
                ('versionid', models.IntegerField(default=1)),
                ('solaranywheresite', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlantReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recordstatus', models.IntegerField(default=9)),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('sampleinterval', models.CharField(blank=True, max_length=64, null=True)),
                ('firstmeasurementdate', models.DateField(blank=True, null=True)),
                ('lastmeasurementdate', models.DateField(blank=True, null=True)),
                ('monthlyyield', models.FloatField(blank=True, null=True)),
                ('performanceratio', models.FloatField(blank=True, null=True)),
                ('storagestateofhealth', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlantTimeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('sampleinterval', models.IntegerField()),
                ('WH_DIFF', models.FloatField()),
                ('GHI_DIFF', models.FloatField()),
                ('TMPAMB_AVG', models.FloatField(blank=True, null=True)),
                ('HPOA_DIFF', models.FloatField(blank=True, null=True)),
                ('recordstatus', models.IntegerField(default=1)),
                ('plantUUID', models.CharField(blank=True, max_length=254, null=True)),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osparc.Plant')),
            ],
        ),
        migrations.CreateModel(
            name='PlantType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('observationstartdate', models.DateField(blank=True, null=True)),
                ('observationenddate', models.DateField(blank=True, null=True)),
                ('plantfilterattribute', models.CharField(blank=True, max_length=254, null=True)),
                ('plantfilteroperation', models.CharField(blank=True, max_length=254, null=True)),
                ('plantfiltervalue', models.CharField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=2)),
                ('runsubmittime', models.DateTimeField(auto_now_add=True)),
                ('runstarttime', models.DateTimeField(blank=True, null=True)),
                ('runcompletetime', models.DateTimeField(blank=True, null=True)),
                ('firstmeasurementdate', models.DateField(blank=True, null=True)),
                ('lastmeasurementdate', models.DateField(blank=True, null=True)),
                ('numberofmeasurements', models.IntegerField(blank=True, null=True)),
                ('numberofplants', models.IntegerField(blank=True, null=True)),
                ('totaldccapacity', models.FloatField(blank=True, null=True)),
                ('totalstoragecapacity', models.FloatField(blank=True, null=True)),
                ('reportdefinition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osparc.ReportDefinition')),
            ],
        ),
        migrations.CreateModel(
            name='UploadActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plantuploadtime', models.DateTimeField(auto_now_add=True)),
                ('mostrecenttimeseriesuploadtime', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=16)),
                ('errorDetail', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='plant',
            name='plantreport',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osparc.PlantReport'),
        ),
        migrations.AddField(
            model_name='plant',
            name='uploadactivity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osparc.UploadActivity'),
        ),
        migrations.AddField(
            model_name='kpi',
            name='reportrun',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osparc.ReportRun'),
        ),
    ]
